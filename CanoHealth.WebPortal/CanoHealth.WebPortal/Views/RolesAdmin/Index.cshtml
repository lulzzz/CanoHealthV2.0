
@{
    ViewBag.Title = "Roles";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<header class="main-header main-header-inverse">
    <div class="container">
        <h1 class="page-title">Roles</h1>

        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index", "Home")">Home</a></li>
            <li class="active">Roles</li>
        </ol>
    </div>
</header>

<div class="container-fluid">
    @*@Html.AntiForgeryToken()*@
    @(Html.Kendo().Grid<CanoHealth.WebPortal.ViewModels.Admin.RoleViewModel>()
                  .Name("Roles")
                  .ToolBar(tool =>
                  {
                      tool.Create().Text("NEW");
                      tool.Excel().Text("EXCEL");
                  })
                  .Excel(ex =>
                  {
                      ex.AllPages(true);
                      ex.FileName("Roles");
                  })
                  .Columns(col =>
                  {
                      col.Bound(r => r.Id).Hidden();

                      col.Bound(r => r.Name).Title("ROLE").Width(110);

                      col.Bound(r => r.Active).ClientTemplate("#=Active ? 'YES':'NO'#").Title("ACTIVE").Width(110);

                      col.Command(cmd =>
                      {
                          cmd.Edit();
                      }).Title("ACTIONS").Width(100);
                  })
                  .Filterable()
                  .Sortable()
                  .Groupable()
                  .Resizable(r => r.Columns(true))
                  .Pageable(pager => pager
                      .Numeric(true)
                      .Info(true)
                      .PreviousNext(true)
                      .Refresh(true)
                      .PageSizes(new object[] { 25, 50, 100, "All" })
                  )
                  .Scrollable(s => s.Height("auto"))
                  .DataSource(ds => ds
                      .Ajax()
                      .ServerOperation(true)
                      .PageSize(10)
                      .Model(mod =>
                      {
                          mod.Id(r => r.Id);
                          mod.Field(r => r.Id).Editable(false);
                      })
                      .Events(ev =>
                      {
                          ev.Error("RolesController.roleserverSideErrorHandlers");
                      })
                      .Read(r => r.Action("ReadAllRoles", "RolesAdmin").Data("AntiForgeryTokenController.sendAntiForgery"))
                      .Create(c => c.Action("CreateRole", "RolesAdmin").Data("AntiForgeryTokenController.sendAntiForgery"))
                      .Update(u => u.Action("UpdateRole", "RolesAdmin").Data("AntiForgeryTokenController.sendAntiForgery"))
              ))
</div>

<script type="text/kendo-template" id="serverside-errorhandler-Template">
    <div class="k-widget k-tooltip k-tooltip-validation k-invalid-msg field-validation-error"
         style="margin: 0.5em; display: block; " data-for="#=field#" data-valmsg-for="#=field#" id="#=field#_validationMessage" role="alert">
        <span class="k-icon k-warning"> </span>#=message#<div class="k-callout k-callout-n"></div>
    </div>
</script>

@section Scripts{
    <script src="~/Scripts/controllers/antiForgeryTokenController.js"></script>
    <script src="~/Scripts/controllers/rolesController.js"></script>
    @*<script type="text/javascript">
            function sendAntiForgery() {
                return { "__RequestVerificationToken": $('input[name=__RequestVerificationToken]').val() }
            }
        </script>*@
}