@using CanoHealth.WebPortal.ViewModels
@{
    ViewBag.Title = "Home Page";
}

<i class="fa fa-address-book"></i>
<i class="fa fa-4x fa-clock-o"></i>

<div class="container-fluid placeholders">
    <div class="row">
        <div class="col-xs-4 col-md-2 placeholder">
            <img class="img-responsive " alt="200x200" src="/Content/Images/200.png">
        </div>
        <div class="col-xs-10 col-md-3">
            <h2>Lorem ipsum dolor sit amet...</h2>
            <p>
                Lorem Ipsum is simply dummy text of the printing and typesetting industry.
            Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a
            galley of type and scrambled it to make a type specimen book.
            </p>

            <p>
                @(Html.Kendo()
                .Button()
                .Name("PrimaryButton")
                .Content("Primary Button")
                .HtmlAttributes(new { @class = "textButton k-primary" } ))
            </p>
        </div>

        <div class="col-xs-10 col-md-3">
            <h2>&nbsp;</h2>
            <p>
                Lorem Ipsum is simply dummy text of the printing and typesetting industry.
            Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a
            galley of type and scrambled it to make a type specimen book.
            </p>
            <p>
                @(Html.Kendo()
                .Button()
                .Name("TextButton")
                .Content("Button")
                .HtmlAttributes(new { @class = "textButton" } ))
            </p>

        </div>
        <div class="col-xs-10 col-md-3">
            <h2>&nbsp;</h2>
            <p>
                Lorem Ipsum is simply dummy text of the printing and typesetting industry.
            Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a
            galley of type and scrambled it to make a type specimen book.
            </p>

            <p>
                @(Html.Kendo()
                .Button()
                .Name("Button")
                .Content("Button")
                .HtmlAttributes(new { @class = "textButton" } ))
            </p>

        </div>
    </div>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-xs-18 col-md-12">
            @(Html.Kendo().Grid<OrderViewModel>()
        .Name("grid")
        .Columns(columns =>
        {
        columns.Bound(p => p.OrderID).Filterable(false);
        columns.Bound(p => p.Freight);
        columns.Bound(p => p.OrderDate).Format("{0:MM/dd/yyyy}");
        columns.Bound(p => p.ShipName);
        columns.Bound(p => p.ShipCity);
        })
        .Pageable()
        .Sortable()
        .Scrollable()
        .Filterable()
        .HtmlAttributes(new { style = "height:550px;" })
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Read(read => read.Action("Orders_Read", "Grid"))
        )
        )
      </div>
    </div>
</div>


<button class="btn btn-primary">Cancel</button>

<div class="col-md-12">
    @(Html.Kendo().AutoComplete()
          .Name("countries")
          .Filter("startswith")
          .Placeholder("Select country...")
          .HtmlAttributes(new { style = "width: 100%;" })
          .BindTo(new string[] {
                "Albania",
                "Andorra",
                "Armenia",
                "Austria",
                "Azerbaijan",
                "Belarus",
                "Belgium",
                "Bosnia & Herzegovina",
                "Bulgaria",
                "Croatia",
                "Cyprus",
                "Czech Republic",
                "Denmark",
                "Estonia",
                "Finland",
                "France",
                "Georgia",
                "Germany",
                "Greece",
                "Hungary",
                "Iceland",
                "Ireland",
                "Italy",
                "Kosovo",
                "Latvia",
                "Liechtenstein",
                "Lithuania",
                "Luxembourg",
                "Macedonia",
                "Malta",
                "Moldova",
                "Monaco",
                "Montenegro",
                "Netherlands",
                "Norway",
                "Poland",
                "Portugal",
                "Romania",
                "Russia",
                "San Marino",
                "Serbia",
                "Slovakia",
                "Slovenia",
                "Spain",
                "Sweden",
                "Switzerland",
                "Turkey",
                "Ukraine",
                "United Kingdom",
                "Vatican City"
          })
          .Separator(", ")
    )
</div>
