@model CanoHealth.WebPortal.ViewModels.InsuranceFormViewModel

<div class="container-fluid">
    <div class="form-group">
        <label class="control-label text-uppercase">Name <sup class="text-danger">*</sup></label>
        <input class="k-textbox" id="Name" name="Name"
               data-val="true"
               data-val-length="The field Name must be a string with a maximum length of 100."
               data-val-length-max="100"
               data-val-required="The Name field is required." style="width: 100%;">
    </div>

    <div class="form-group">
        <label class="control-label text-uppercase">code</label>
        <input class="k-textbox" id="Code" name="Code"
               data-val="true"
               data-val-length="The field Name must be a string with a maximum length of 10."
               data-val-length-max="10"
               style="width: 100%;">
    </div>

    <div class="form-group">
        <label class="control-label text-uppercase">Address</label>
        <input type="text" class="k-textbox" name="Address" style="width: 100%;" />
    </div>

    <div class="form-group">
        <label class="control-label text-uppercase">Phone number</label>
        <input type="text" data-role="maskedtextbox" name="PhoneNumber" id="PhoneNumber"
               data-val-length="The Phone number must be a string with a maximum length of 20."
               data-val-length-max="20"
               data-val-phone="The Phone number field is not a valid phone number."
               data-mask="(999) 000-0000"
               style="width: 100%;">
    </div>

    <div class="form-group">
        @(Html.Kendo().MultiSelect()
           .Name("lineofbusiness")
           .DataTextField("Code")
           .DataValueField("PlanTypeId")
           .Placeholder("Select Line of Business...")           
           .Height(520)
           .NoDataTemplateId("no-dataitem-lineofbusiness-template")
           .DataSource(source =>
           {
               source.Custom()
                   .ServerFiltering(true)
                   .ServerPaging(true)
                   .PageSize(80)
                   .Type("aspnetmvc-ajax") //Set this type if you want to use DataSourceRequest and ToDataSourceResult instances
                   .Transport(transport =>
                   {
                       transport.Read("GetBusinessLines", "BusinessLines");                      
                   })
                   .Schema(schema =>
                   {
                       schema.Data("Data") //define the [data](http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.data) option
                             .Total("Total"); //define the [total](http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.total) option
           });
           })
           
        )
    </div>

</div>
