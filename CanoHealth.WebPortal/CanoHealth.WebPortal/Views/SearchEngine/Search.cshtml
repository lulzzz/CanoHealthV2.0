
@{
    ViewBag.Title = "Search";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}
<link href="~/Content/search-doctor-drp-template.css" rel="stylesheet" />

<header class="main-header main-header-inverse">
    <div class="container">
        <h1 class="page-title"></h1>

        <ol class="breadcrumb pull-right">
            <li><a href="@Url.Action("Index", "Home")">Home</a></li>
            <li class="active">Search</li>
        </ol>
    </div>
</header>

@Html.Partial("_CommonHeader")

<div class="container-fluid js-searchengine-section">
    <div class="row">
        <div class="col-sm-5 col-md-5 col-lg-4">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    Search Criterias
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        <label class="control-label text-uppercase">
                            Corporation <sup class="text-danger">*</sup>
                        </label>
                        @(Html.Kendo().DropDownList()
                                  .Name("corporations")
                                  .OptionLabel("Select corporation...")
                                  .DataTextField("CorporationName")
                                  .DataValueField("CorporationId")
                                  .MinLength(3)
                                  .HtmlAttributes(new { style = "width:100%" })
                                  .Height(290)
                                  .Filter(FilterType.Contains)
                                  .DataSource(source =>
                                  {
                                      source.Custom()
                                          .ServerFiltering(true)
                                          .Type("aspnetmvc-ajax") //Set this type if you want to use DataSourceRequest and ToDataSourceResult instances
                                          .Transport(transport =>
                                          {
                                                      //transport.Read("ReadCorporations", "Corporation");
                                                      transport.Read("GetCorporationByUser", "CorporationAccesses");
                                          })
                                          .Schema(schema =>
                                          {
                                              schema.Data("Data") //define the [data](http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.data) option
                                                    .Total("Total"); //define the [total](http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.total) option
                                                  });
                                  }))
                    </div>
                    <div class="form-group">
                        <label class="control-label text-uppercase">
                            Insurance <sup class="text-danger">*</sup>
                        </label>
                        @(Html.Kendo().DropDownList()
                                  .Name("insurances")
                                  .OptionLabel("Select insurance...")
                                  .DataTextField("Name")
                                  .DataValueField("InsuranceId")
                                  .MinLength(3)
                                  .HtmlAttributes(new { style = "width:100%" })
                                  .Height(290)
                                  .Filter(FilterType.Contains)
                                  .DataSource(source =>
                                  {
                                      source.Custom()
                                          .ServerFiltering(true)
                                          .Type("aspnetmvc-ajax") //Set this type if you want to use DataSourceRequest and ToDataSourceResult instances
                                          .Transport(transport =>
                                          {
                                              transport.Read("ReadInsurances", "Insurances");
                                          })
                                          .Schema(schema =>
                                          {
                                              schema.Data("Data") //define the [data](http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.data) option
                                                    .Total("Total"); //define the [total](http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.total) option
                                                  });
                                  }))
                    </div>
                    <div class="form-group">
                        <label class="control-label text-uppercase">Location</label>
                        @(Html.Kendo().DropDownList()
                                      .Name("locations")
                                      .HtmlAttributes(new { style = "width:100%" })
                                      .OptionLabel("Select location...")
                                      .DataTextField("Name")
                                      .DataValueField("PlaceOfServiceId")
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("GetLocations", "PlaceOfService")
                                                  .Data("SearchEngine.filterCorporations");
                                          })
                                              .ServerFiltering(true);
                                      })
                                      .Enable(false)
                                      .AutoBind(false)
                                      .CascadeFrom("corporations"))
                    </div>
                    <div class="form-group">
                        <label class="control-label text-uppercase">Doctor</label>
                        @(Html.Kendo().AutoComplete()
                                  .Name("doctors")
                                  .DataTextField("FullName")
                                  .Filter(FilterType.Contains)
                                  .ValuePrimitive(false)
                                  .HtmlAttributes(new { style = "width:100%" })
                                  .Placeholder("Type a name ...")
                                  .FooterTemplate("Total <strong>#: instance.dataSource.total() #</strong> items found")
                                  .Template("<span class=\"k-state-default\"><h3>#: data.FullName #</h3><p>NPI: #:data.NpiNumber #</p></span>")
                                  .Height(520)
                                  .Events(ev => ev
                                    .Select("SearchEngine.onSelectDoctorAutocomplete")
                                    .Open("SearchEngine.onOpenDoctorAutocomplete")
                                    .Close("SearchEngine.onCloseDoctorAutocomplete")
                                    .Change("SearchEngine.onChangeDoctorAutocomplete")
                                  )
                                  .DataSource(source =>
                                  {
                                      source.Custom()
                                          .ServerFiltering(true)
                                          .Type("aspnetmvc-ajax") //Set this type if you want to use DataSourceRequest and ToDataSourceResult instances
                                          .Transport(transport =>
                                          {
                                              transport.Read("GetActiveDoctors", "SearchEngine"); //We can use the same action for Doctors Controller
                                                  })
                                          .Schema(schema =>
                                          {
                                              schema.Data("Data") //define the [data](http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.data) option
                                                    .Total("Total"); //define the [total](http://docs.telerik.com/kendo-ui/api/javascript/data/datasource#configuration-schema.total) option
                                                  });
                                  }))
                    </div>
                    <hr />
                    <div class="pull-left">
                        <a class="btn btn-ar btn-primary js-searchengine-button"><i class="fa fa-search"></i> Search</a>
                        <a class="btn btn-ar btn-default js-refresh-button"><i class="fa fa-refresh"></i> Clear Search</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container-fluid">
    <div id="js-grid-result"></div>
    <div id="js-notification-window"></div>
    <br /><br />
    <div id="js-doctor-calendar-scheduler"></div>
    <div id="js-schedule-window"></div>
</div>

<!--Show the List of Line of Business related to a doctor and/or location-->
<script type="text/x-kendo-template" id="lineofbusiness-detail-template">
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>Line of Business</th>
                    <th>Effective Date</th>
                    <th>Notes</th>
                    <th>Provider by Location</th>
                </tr>
            </thead>
            <tbody>
                #for(var i = 0; i < lineOfBusiness.length; i++){#
                <tr>
                    <td>#=lineOfBusiness[i].lineOfBusinessName#</td>
                    <td>#=moment(lineOfBusiness[i].effectiveDate).format('L')#</td>
                    #if(lineOfBusiness[i].note){#
                        <td> #=lineOfBusiness[i].note#</td>
                    #}else{#
                        <td>None.</td>
                    #}#
                    @*<td> #=lineOfBusiness[i].note#</td>*@
                    #if(lineOfBusiness[i].providerNumberByLocation){#
                    <td>#=lineOfBusiness[i].providerNumberByLocation#</td>
                    #}else{#
                    <td>N/A</td>
                    #}#
                </tr>
                #}#
            </tbody>
        </table>
    </div>
</script>

<!--Show the list of locations related to specific line of business-->
<script type="text/x-kendo-template" id="locations-detail-template">
    @(Html.Kendo().Grid<CanoHealth.WebPortal.Core.Dtos.ContractBusinessLineLocationDto>()
                  .Name("Locations_#=contractLineofBusinessId#")
                  .Columns(col =>
                  {
                      col.Bound(c => c.PlaceOfServiceId).Hidden();

                      col.Bound(c => c.CorporationId).Hidden();

                      col.Bound(c => c.InsuranceId).Hidden();

                      col.Bound(c => c.ContractLineofBusinessId).Hidden();

                      col.Bound(c => c.Name).Title("LOCATION");

                      col.Bound(c => c.Address).Title("ADDRESS");

                      col.Bound(c => c.PhoneNumber).Title("PHONE NUMBER");

                      col.Bound(c => c.FaxNumber).Title("FAX NUMBER");

                      col.Bound(c => c.Active).ClientTemplate("\\#=Active ? 'YES': 'NO'\\#").Title("ACTIVE");
                  })
                    .ClientDetailTemplateId("doctor-list-template")
                    .DataSource(ds => ds
                        .Ajax()
                        .ServerOperation(true)
                        .PageSize(5)
                        .Model(model =>
                        {
                            model.Id(x => x.PlaceOfServiceId);
                        })
                        .Read(read => read.Action("GetLocationsByContractLineOfBusiness", "ClinicContractBusinessLines", new
                        {
                            contractLineofBusinessId = "#=contractLineofBusinessId#",
                            insuranceId = "#=insuranceId#"
                        }))
                    )
                    .Filterable()
                    .Sortable()
                    .Pageable(ps =>
                    {
                        ps.Refresh(true);
                        ps.PreviousNext(true);
                        ps.PageSizes(new object[] { 25, 50, 100, "All" });
                    })
                    .ToClientTemplate())
</script>

<!--Show the list of doctors related to specific line of business and specific location-->
<script type="text/x-kendo-template" id="doctor-list-template">
    <div>
        @(Html.Kendo().ListView<CanoHealth.WebPortal.Core.Dtos.DoctorDto>()
                      .Name("listView_#=ContractLineofBusinessId#_#=PlaceOfServiceId#")
                      .TagName("div")
                      .ClientTemplateId("doctor-detail-template")
                      .DataSource(dataSource =>
                      {
                          dataSource.Read(read => read.Action("GetDoctorByLocationAndLineOfBusiness",
                              "SearchEngine", new
                              {
                                  locationId = "#=PlaceOfServiceId#",
                                  contractLineofBusinessId = "#=ContractLineofBusinessId#",
                                  insuranceId = "#=InsuranceId#"
                              }))
                              .Events(ev => ev.Error("SearchEngine.onErrorHandlerSearchDoctor"));
                      })
                      .Events(ev => ev.DataBound("SearchEngine.onBoundDoctorToListView"))
                      .HtmlAttributes(new { @class = "css-listview", style = "background-color: inherit;" })
                      .ToClientTemplate())
    </div>
</script>

<!--Show the details of a doctor-->
<script type="text/x-kendo-template" id="doctor-detail-template">
    <div class="col-sm-3 col-md-4">
        <div class="content-box box-default">
            <span class="icon-ar icon-ar-lg icon-ar-inverse icon-ar-circle">
                <i class="fa fa-user-md"></i>
            </span>
            <h5 class="content-box-title">#=FullName#, #=Degree#</h5>
            <p> <strong>DOB:</strong> #=moment(DateOfBirth).format('L')#</p>
            <p> <strong>NPI:</strong> #=NpiNumber#</p>
            <p> <strong>CAQH:</strong> #=CaqhNumber#</p>
            <p> <strong>PNBI <sup class="text-danger">*</sup>:</strong> #=IndividualProviderNumber#</p>
            <p> <strong>PNBL <sup class="text-danger">**</sup>:</strong> #=IndividualProviderByLocation#</p>
            @*<p> <a href="\\#js-doctor-calendar-scheduler" data-docid="#=DoctorId#" onclick="SearchEngine.showDoctorSchedule('#=DoctorId#');">Doctor's schedule</a> </p>*@
            <sup class="text-danger">*</sup> <span class="demo-hint">Provider Number by Insurance</span>
            <br />
            <sup class="text-danger">**</sup> <span class="demo-hint">Provider Number by Location</span>
        </div>
    </div>
</script>

<!--Show when data no found-->
<script type="text/x-kendo-template" id="no-data-found">
    <div class="row">
        <div class="col-sm-5 col-md-5 col-lg-4">
            <div class="alert alert-success">
                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                <strong><i class="fa fa-bullhorn"></i> Info!</strong> NO DATA FOUND.
            </div>
        </div>
    </div>
</script>

<!--show when doctor no found-->
<script type="text/x-kendo-template" id="no-doctor-found">
    <div class="alert alert-border alert-success">
        <strong><i class="fa fa-bullhorn"></i> Info!</strong> No doctor found.
    </div>
</script>


@section Scripts{
    <script src="~/Scripts/controllers/searchEngineController.js"></script>
    <script>
        $(document).ready(function () {
            SearchEngine.init(".js-searchengine-section");
        })
    </script>
}
